val sentenceDataFrame = spark.createDataFrame(Seq(
  (0, "Chao thay va tat ca cac ban"),
  (1, "Chung minh la nhom 9"),
  (2, "Den,tu,lop,CNTT4")
)).toDF("id", "sentence")

val tokenizer = new Tokenizer().setInputCol("sentence").setOutputCol("words")

val regexTokenizer = new RegexTokenizer()

  .setInputCol("sentence")
  
  .setOutputCol("words")
  
  .setPattern("\\W") // alternatively .setPattern("\\w+").setGaps(false)

val countTokens = udf { (words: Seq[String]) => words.length }

val tokenized = tokenizer.transform(sentenceDataFrame)

tokenized.select("sentence", "words")

    .withColumn("tokens", countTokens(col("words"))).show(false)

val regexTokenized = regexTokenizer.transform(sentenceDataFrame)
regexTokenized.select("sentence", "words")
    .withColumn("tokens", countTokens(col("words"))).show(false)
